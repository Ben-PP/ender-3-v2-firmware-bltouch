make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 4.3
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2020 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Fri Nov 25 18:03:12 2022

# Variables

# environment
GDK_BACKEND = x11
# environment
LC_ALL = C
# environment
GNOME_SHELL_SESSION_MODE = ubuntu
# environment
SSH_AGENT_LAUNCHER = gnome-keyring
# environment
GJS_DEBUG_OUTPUT = stderr
# environment
MANDATORY_PATH = /usr/share/gconf/ubuntu.mandatory.path
# environment
LC_NAME = en_GB.UTF-8
# environment
LC_NUMERIC = en_GB.UTF-8
# environment
VSCODE_CWD = /home/karel
# environment
WINDOWPATH = 2
# environment
LC_ADDRESS = en_GB.UTF-8
# environment
LIBVIRT_DEFAULT_URI = qemu:///system
# default
MAKE_COMMAND := make
# environment
QT_ACCESSIBILITY = 1
# automatic
@D = $(patsubst %/,%,$(dir $@))
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# default
.VARIABLES := 
# environment
PWD = /home/karel/devel/printer_firmwares/ender-3-v2-firmware-bltouch
# automatic
%D = $(patsubst %/,%,$(dir $%))
# environment
XDG_DATA_DIRS = /usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop
# automatic
^D = $(patsubst %/,%,$(dir $^))
# automatic
%F = $(notdir $%)
# environment
VSCODE_CODE_CACHE_PATH = /home/karel/.config/Code/CachedData/d045a5eda657f4d7b676dedbfa7aab8207f8a075
# environment
LANG = C
# environment
XAUTHORITY = /run/user/1000/gdm/Xauthority
# default
.LOADED := 
# default
.INCLUDE_DIRS = /usr/local/include /usr/include /usr/include
# makefile
MAKEFLAGS = pqrR
# makefile
CURDIR := /home/karel/devel/printer_firmwares/ender-3-v2-firmware-bltouch
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
MFLAGS = -pqrR
# environment
SSH_AUTH_SOCK = /run/user/1000/keyring/ssh
# default
.SHELLFLAGS := -c
# environment
XDG_CONFIG_DIRS = /etc/xdg/xdg-ubuntu:/etc/xdg
# automatic
+D = $(patsubst %/,%,$(dir $+))
# environment
XDG_SESSION_DESKTOP = ubuntu
# makefile (from 'Makefile', line 1)
MAKEFILE_LIST := Makefile
# automatic
@F = $(notdir $@)
# environment
VSCODE_PID = 4704
# environment
XDG_SESSION_TYPE = x11
# automatic
?D = $(patsubst %/,%,$(dir $?))
# environment
SESSION_MANAGER = local/karel-ubuntu:@/tmp/.ICE-unix/2500,unix/karel-ubuntu:/tmp/.ICE-unix/2500
# automatic
*F = $(notdir $*)
# environment
CHROME_DESKTOP = code-url-handler.desktop
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
# automatic
<D = $(patsubst %/,%,$(dir $<))
# environment
VSCODE_NLS_CONFIG = {"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
GNOME_DESKTOP_SESSION_ID = this-is-deprecated
# makefile
SHELL = /bin/sh
# default
MAKECMDGOALS := all
# environment
PLATFORMIO_CALLER = vscode
# environment
XMODIFIERS = @im=ibus
# environment
GJS_DEBUG_TOPICS = JS ERROR;JS LOG
# environment
SHLVL = 0
# environment
MAKELEVEL := 0
# default
MAKE = $(MAKE_COMMAND)
# environment
PATH = /home/karel/.local/bin:/home/karel/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin:/home/karel/.pub-cache/bin
# default
MAKEFILES := 
# environment
LC_MONETARY = en_GB.UTF-8
# automatic
^F = $(notdir $^)
# environment
LC_TIME = en_GB.UTF-8
# environment
INVOCATION_ID = 134484fc872948d2ba0b49b4e7e2be3f
# environment
USERNAME = karel
# environment
LC_TELEPHONE = en_GB.UTF-8
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# automatic
?F = $(notdir $?)
# environment
NO_PROXY = 127.0.0.1
# environment
XDG_CURRENT_DESKTOP = Unity
# environment
LS_COLORS = 
# automatic
+F = $(notdir $+)
# environment
DESKTOP_SESSION = ubuntu
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = ubuntu:GNOME
# 'override' directive
GNUMAKEFLAGS := 
# environment
LOGNAME = karel
# environment
GIO_LAUNCHED_DESKTOP_FILE = /usr/share/applications/code.desktop
# environment
PLATFORMIO_PATH = /home/karel/.platformio/python3/bin:/home/karel/.local/bin:/home/karel/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin:/home/karel/.pub-cache/bin
# makefile
.DEFAULT_GOAL := help
# environment
SYSTEMD_EXEC_PID = 2568
# environment
DISPLAY = :1
# environment
USER = karel
# environment
GTK_MODULES = gail:atk-bridge
# environment
DEFAULTS_PATH = /usr/share/gconf/ubuntu.default.path
# default
MAKE_VERSION := 4.3
# environment
MANAGERPID = 2061
# environment
LC_MEASUREMENT = en_GB.UTF-8
# environment
GIO_LAUNCHED_DESKTOP_FILE_PID = 4704
# environment
_ = /usr/share/code/code
# environment
LC_PAPER = en_GB.UTF-8
# environment
XDG_RUNTIME_DIR = /run/user/1000
# environment
GPG_AGENT_INFO = /run/user/1000/gnupg/S.gpg-agent:0:1
# environment
JOURNAL_STREAM = 8:25579
# environment
XDG_SESSION_CLASS = user
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
PLATFORMIO_IDE = 2.5.5
# environment
HOME = /home/karel
# environment
QT_IM_MODULE = ibus
# environment
ELECTRON_RUN_AS_NODE = 1
# environment
VSCODE_IPC_HOOK = /run/user/1000/vscode-77485c9b-1.72.2-main.sock
# environment
PAPERSIZE = a4
# default
.RECIPEPREFIX := 
# automatic
<F = $(notdir $<)
# default
SUFFIXES := 
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell nocomment grouped-target extra-prereqs archives jobserver output-sync check-symlink load
# environment
XDG_MENU_PREFIX = gnome-
# environment
GDMSESSION = ubuntu
# environment
LC_IDENTIFICATION = en_GB.UTF-8
# variable set hash-table stats:
# Load=109/1024=11%, Rehash=0, Collisions=5/139=4%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 2054, inode 12452803): 20 files, no impossibilities.

# 20 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

# Files

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-07-13 03:25:33
#  File has been updated.
#  Successfully updated.

tests-all-local-docker:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 47):
	docker-compose run --rm marlin $(MAKE) tests-all-local VERBOSE_PLATFORMIO=$(VERBOSE_PLATFORMIO) GIT_RESET_HARD=$(GIT_RESET_HARD)

tests-single-local:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 29):
	@if ! test -n "$(TEST_TARGET)" ; then echo "***ERROR*** Set TEST_TARGET=<your-module> or use make tests-all-local" ; return 1; fi
	export PATH=./buildroot/bin/:./buildroot/tests/:${PATH} \
	  && export VERBOSE_PLATFORMIO=$(VERBOSE_PLATFORMIO) \
	  && run_tests . $(TEST_TARGET) "$(ONLY_TEST)"

tests-single-local-docker:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 36):
	@if ! test -n "$(TEST_TARGET)" ; then echo "***ERROR*** Set TEST_TARGET=<your-module> or use make tests-all-local-docker" ; return 1; fi
	docker-compose run --rm marlin $(MAKE) tests-single-local TEST_TARGET=$(TEST_TARGET) VERBOSE_PLATFORMIO=$(VERBOSE_PLATFORMIO) GIT_RESET_HARD=$(GIT_RESET_HARD) ONLY_TEST="$(ONLY_TEST)"

setup-local-docker:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 51):
	docker-compose build

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
all:
#  Command line target.
#  Implicit rule search has been done.
 
make: *** No rule to make target 'all'.  Stop.

#  File does not exist.
#  File has not been updated.

help:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 2):
	@echo "Tasks for local development:"
	@echo "* tests-single-ci:             Run a single test from inside the CI"
	@echo "* tests-single-local:          Run a single test locally"
	@echo "* tests-single-local-docker:   Run a single test locally, using docker-compose"
	@echo "* tests-all-local:             Run all tests locally"
	@echo "* tests-all-local-docker:      Run all tests locally, using docker-compose"
	@echo "* setup-local-docker:          Setup local docker-compose"
	@echo ""
	@echo "Options for testing:"
	@echo "  TEST_TARGET          Set when running tests-single-*, to select the"
	@echo "                       test. If you set it to ALL it will run all "
	@echo "                       tests, but some of them are broken: use "
	@echo "                       tests-all-* instead to run only the ones that "
	@echo "                       run on GitHub CI"
	@echo "  ONLY_TEST            Limit tests to only those that contain this, or"
	@echo "                       the index of the test (1-based)"
	@echo "  VERBOSE_PLATFORMIO   If you want the full PIO output, set any value"
	@echo "  GIT_RESET_HARD       Used by CI: reset all local changes. WARNING:"
	@echo "                       THIS WILL UNDO ANY CHANGES YOU'VE MADE!"

tests-all-local:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 41):
	export PATH=./buildroot/bin/:./buildroot/tests/:${PATH} \
	  && export VERBOSE_PLATFORMIO=$(VERBOSE_PLATFORMIO) \
	  && for TEST_TARGET in $$(./get_test_targets.py) ; do echo "Running tests for $$TEST_TARGET" ; run_tests . $$TEST_TARGET ; done

tests-single-ci:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 24):
	export GIT_RESET_HARD=true
	$(MAKE) tests-single-local TEST_TARGET=$(TEST_TARGET)

.PHONY: help tests-single-ci tests-single-local tests-single-local-docker tests-all-local tests-all-local-docker setup-local-docker
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# files hash-table stats:
# Load=12/1024=1%, Rehash=0, Collisions=0/35=0%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 33 / storage = 372 B / avg = 11 B
# current buf: size = 8162 B / used = 372 B / count = 33 / avg = 11 B

# strcache performance: lookups = 64 / hit rate = 48%
# hash-table stats:
# Load=33/8192=0%, Rehash=0, Collisions=0/64=0%
# Finished Make data base on Fri Nov 25 18:03:12 2022

 
